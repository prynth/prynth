{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportNamespaceSpecifier",
          "local": {
            "type": "Identifier",
            "name": "_",
            "range": [
              12,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 12
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            7,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 7
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "underscore",
        "raw": "'underscore'",
        "range": [
          20,
          32
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 20
          },
          "end": {
            "line": 1,
            "column": 32
          }
        }
      },
      "range": [
        0,
        33
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 33
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * >> A dryad (/ˈdraɪ.æd/; Greek: Δρυάδες, sing.: Δρυάς) is a tree nymph, or female tree spirit, in Greek mythology\n *\n * A Dryad is a component for managing the creation and control of something.\n *\n * For instance that 'something' could be a SuperCollider Synth, or a MIDI connection, SVG or Canvas in a webrowser,\n * a datasource, a web resource to fetch or an external process.\n *\n * It is anything that you want to specify parameters for and then create according to those parameters.\n *\n * Dryads have properties and children but do not hold any internal state.\n * Their methods are passed a context object and they perform their functionality\n * based on their properties (what they are supposed to be / to do) and the context\n * which holds the state, temporary variables they need for operation (like supercollider node ids) and gives them access to variables defined by parent nodes in the play graph.\n *\n * They provide functionality by return command objects which are processed by\n * command middleware which is supplied by various Dryadic packages.\n ",
          "range": [
            35,
            1105
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Dryad",
          "range": [
            1129,
            1134
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 21
            },
            "end": {
              "line": 23,
              "column": 26
            }
          }
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "constructor",
                "range": [
                  1255,
                  1266
                ],
                "loc": {
                  "start": {
                    "line": 29,
                    "column": 2
                  },
                  "end": {
                    "line": 29,
                    "column": 13
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "properties",
                      "range": [
                        1267,
                        1277
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 14
                        },
                        "end": {
                          "line": 29,
                          "column": 24
                        }
                      }
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [],
                      "range": [
                        1278,
                        1280
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 25
                        },
                        "end": {
                          "line": 29,
                          "column": 27
                        }
                      }
                    },
                    "range": [
                      1267,
                      1280
                    ],
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 14
                      },
                      "end": {
                        "line": 29,
                        "column": 27
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "children",
                      "range": [
                        1282,
                        1290
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 29
                        },
                        "end": {
                          "line": 29,
                          "column": 37
                        }
                      }
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [],
                      "range": [
                        1291,
                        1293
                      ],
                      "loc": {
                        "start": {
                          "line": 29,
                          "column": 38
                        },
                        "end": {
                          "line": 29,
                          "column": 40
                        }
                      }
                    },
                    "range": [
                      1282,
                      1293
                    ],
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 29
                      },
                      "end": {
                        "line": 29,
                        "column": 40
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1301,
                              1305
                            ],
                            "loc": {
                              "start": {
                                "line": 30,
                                "column": 4
                              },
                              "end": {
                                "line": 30,
                                "column": 8
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "properties",
                            "range": [
                              1306,
                              1316
                            ],
                            "loc": {
                              "start": {
                                "line": 30,
                                "column": 9
                              },
                              "end": {
                                "line": 30,
                                "column": 19
                              }
                            }
                          },
                          "range": [
                            1301,
                            1316
                          ],
                          "loc": {
                            "start": {
                              "line": 30,
                              "column": 4
                            },
                            "end": {
                              "line": 30,
                              "column": 19
                            }
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "_",
                              "range": [
                                1319,
                                1320
                              ],
                              "loc": {
                                "start": {
                                  "line": 30,
                                  "column": 22
                                },
                                "end": {
                                  "line": 30,
                                  "column": 23
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "assign",
                              "range": [
                                1321,
                                1327
                              ],
                              "loc": {
                                "start": {
                                  "line": 30,
                                  "column": 24
                                },
                                "end": {
                                  "line": 30,
                                  "column": 30
                                }
                              }
                            },
                            "range": [
                              1319,
                              1327
                            ],
                            "loc": {
                              "start": {
                                "line": 30,
                                "column": 22
                              },
                              "end": {
                                "line": 30,
                                "column": 30
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "ObjectExpression",
                              "properties": [],
                              "range": [
                                1328,
                                1330
                              ],
                              "loc": {
                                "start": {
                                  "line": 30,
                                  "column": 31
                                },
                                "end": {
                                  "line": 30,
                                  "column": 33
                                }
                              }
                            },
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression",
                                  "range": [
                                    1332,
                                    1336
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 30,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 30,
                                      "column": 39
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "defaultProperties",
                                  "range": [
                                    1337,
                                    1354
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 30,
                                      "column": 40
                                    },
                                    "end": {
                                      "line": 30,
                                      "column": 57
                                    }
                                  }
                                },
                                "range": [
                                  1332,
                                  1354
                                ],
                                "loc": {
                                  "start": {
                                    "line": 30,
                                    "column": 35
                                  },
                                  "end": {
                                    "line": 30,
                                    "column": 57
                                  }
                                }
                              },
                              "arguments": [],
                              "range": [
                                1332,
                                1356
                              ],
                              "loc": {
                                "start": {
                                  "line": 30,
                                  "column": 35
                                },
                                "end": {
                                  "line": 30,
                                  "column": 59
                                }
                              }
                            },
                            {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "Identifier",
                                "name": "properties",
                                "range": [
                                  1358,
                                  1368
                                ],
                                "loc": {
                                  "start": {
                                    "line": 30,
                                    "column": 61
                                  },
                                  "end": {
                                    "line": 30,
                                    "column": 71
                                  }
                                }
                              },
                              "right": {
                                "type": "ObjectExpression",
                                "properties": [],
                                "range": [
                                  1372,
                                  1374
                                ],
                                "loc": {
                                  "start": {
                                    "line": 30,
                                    "column": 75
                                  },
                                  "end": {
                                    "line": 30,
                                    "column": 77
                                  }
                                }
                              },
                              "range": [
                                1358,
                                1374
                              ],
                              "loc": {
                                "start": {
                                  "line": 30,
                                  "column": 61
                                },
                                "end": {
                                  "line": 30,
                                  "column": 77
                                }
                              }
                            }
                          ],
                          "range": [
                            1319,
                            1375
                          ],
                          "loc": {
                            "start": {
                              "line": 30,
                              "column": 22
                            },
                            "end": {
                              "line": 30,
                              "column": 78
                            }
                          }
                        },
                        "range": [
                          1301,
                          1375
                        ],
                        "loc": {
                          "start": {
                            "line": 30,
                            "column": 4
                          },
                          "end": {
                            "line": 30,
                            "column": 78
                          }
                        }
                      },
                      "range": [
                        1301,
                        1376
                      ],
                      "loc": {
                        "start": {
                          "line": 30,
                          "column": 4
                        },
                        "end": {
                          "line": 30,
                          "column": 79
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1381,
                              1385
                            ],
                            "loc": {
                              "start": {
                                "line": 31,
                                "column": 4
                              },
                              "end": {
                                "line": 31,
                                "column": 8
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "children",
                            "range": [
                              1386,
                              1394
                            ],
                            "loc": {
                              "start": {
                                "line": 31,
                                "column": 9
                              },
                              "end": {
                                "line": 31,
                                "column": 17
                              }
                            }
                          },
                          "range": [
                            1381,
                            1394
                          ],
                          "loc": {
                            "start": {
                              "line": 31,
                              "column": 4
                            },
                            "end": {
                              "line": 31,
                              "column": 17
                            }
                          }
                        },
                        "right": {
                          "type": "LogicalExpression",
                          "operator": "||",
                          "left": {
                            "type": "Identifier",
                            "name": "children",
                            "range": [
                              1397,
                              1405
                            ],
                            "loc": {
                              "start": {
                                "line": 31,
                                "column": 20
                              },
                              "end": {
                                "line": 31,
                                "column": 28
                              }
                            }
                          },
                          "right": {
                            "type": "ArrayExpression",
                            "elements": [],
                            "range": [
                              1409,
                              1411
                            ],
                            "loc": {
                              "start": {
                                "line": 31,
                                "column": 32
                              },
                              "end": {
                                "line": 31,
                                "column": 34
                              }
                            }
                          },
                          "range": [
                            1397,
                            1411
                          ],
                          "loc": {
                            "start": {
                              "line": 31,
                              "column": 20
                            },
                            "end": {
                              "line": 31,
                              "column": 34
                            }
                          }
                        },
                        "range": [
                          1381,
                          1411
                        ],
                        "loc": {
                          "start": {
                            "line": 31,
                            "column": 4
                          },
                          "end": {
                            "line": 31,
                            "column": 34
                          }
                        }
                      },
                      "range": [
                        1381,
                        1412
                      ],
                      "loc": {
                        "start": {
                          "line": 31,
                          "column": 4
                        },
                        "end": {
                          "line": 31,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1417,
                              1421
                            ],
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 4
                              },
                              "end": {
                                "line": 32,
                                "column": 8
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "tag",
                            "range": [
                              1422,
                              1425
                            ],
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 9
                              },
                              "end": {
                                "line": 32,
                                "column": 12
                              }
                            }
                          },
                          "range": [
                            1417,
                            1425
                          ],
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 4
                            },
                            "end": {
                              "line": 32,
                              "column": 12
                            }
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null",
                          "range": [
                            1428,
                            1432
                          ],
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 15
                            },
                            "end": {
                              "line": 32,
                              "column": 19
                            }
                          }
                        },
                        "range": [
                          1417,
                          1432
                        ],
                        "loc": {
                          "start": {
                            "line": 32,
                            "column": 4
                          },
                          "end": {
                            "line": 32,
                            "column": 19
                          }
                        }
                      },
                      "range": [
                        1417,
                        1433
                      ],
                      "loc": {
                        "start": {
                          "line": 32,
                          "column": 4
                        },
                        "end": {
                          "line": 32,
                          "column": 20
                        }
                      }
                    }
                  ],
                  "range": [
                    1295,
                    1437
                  ],
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 42
                    },
                    "end": {
                      "line": 33,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1266,
                  1437
                ],
                "loc": {
                  "start": {
                    "line": 29,
                    "column": 13
                  },
                  "end": {
                    "line": 33,
                    "column": 3
                  }
                }
              },
              "kind": "constructor",
              "computed": false,
              "range": [
                1255,
                1437
              ],
              "loc": {
                "start": {
                  "line": 29,
                  "column": 2
                },
                "end": {
                  "line": 33,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Subclasses should not implement constructor.\n   * All Dryad classes take properties and children.\n   ",
                  "range": [
                    1140,
                    1252
                  ],
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 2
                    },
                    "end": {
                      "line": 28,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Defaults properties if none are supplied\n   ",
                  "range": [
                    1441,
                    1496
                  ],
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 2
                    },
                    "end": {
                      "line": 37,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "defaultProperties",
                "range": [
                  1499,
                  1516
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 2
                  },
                  "end": {
                    "line": 38,
                    "column": 19
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "range": [
                          1532,
                          1534
                        ],
                        "loc": {
                          "start": {
                            "line": 39,
                            "column": 11
                          },
                          "end": {
                            "line": 39,
                            "column": 13
                          }
                        }
                      },
                      "range": [
                        1525,
                        1535
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 4
                        },
                        "end": {
                          "line": 39,
                          "column": 14
                        }
                      }
                    }
                  ],
                  "range": [
                    1519,
                    1539
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 22
                    },
                    "end": {
                      "line": 40,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1516,
                  1539
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 19
                  },
                  "end": {
                    "line": 40,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1499,
                1539
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 2
                },
                "end": {
                  "line": 40,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Defaults properties if none are supplied\n   ",
                  "range": [
                    1441,
                    1496
                  ],
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 2
                    },
                    "end": {
                      "line": 37,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Values of the command objects are functions may return Promises,\n   * and may reject those promises which will halt the .add() operation\n\n   * The function is called with the node's context\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   ",
                  "range": [
                    1543,
                    2126
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 2
                    },
                    "end": {
                      "line": 52,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "prepareForAdd",
                "range": [
                  2129,
                  2142
                ],
                "loc": {
                  "start": {
                    "line": 53,
                    "column": 2
                  },
                  "end": {
                    "line": 53,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "range": [
                          2168,
                          2170
                        ],
                        "loc": {
                          "start": {
                            "line": 54,
                            "column": 11
                          },
                          "end": {
                            "line": 54,
                            "column": 13
                          }
                        }
                      },
                      "range": [
                        2161,
                        2171
                      ],
                      "loc": {
                        "start": {
                          "line": 54,
                          "column": 4
                        },
                        "end": {
                          "line": 54,
                          "column": 14
                        }
                      }
                    }
                  ],
                  "range": [
                    2155,
                    2175
                  ],
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 28
                    },
                    "end": {
                      "line": 55,
                      "column": 3
                    }
                  },
                  "leadingComments": [
                    {
                      "type": "Block",
                      "value": "player",
                      "range": [
                        2143,
                        2153
                      ],
                      "loc": {
                        "start": {
                          "line": 53,
                          "column": 16
                        },
                        "end": {
                          "line": 53,
                          "column": 26
                        }
                      }
                    }
                  ]
                },
                "generator": false,
                "expression": false,
                "range": [
                  2142,
                  2175
                ],
                "loc": {
                  "start": {
                    "line": 53,
                    "column": 15
                  },
                  "end": {
                    "line": 55,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2129,
                2175
              ],
              "loc": {
                "start": {
                  "line": 53,
                  "column": 2
                },
                "end": {
                  "line": 55,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Values of the command objects are functions may return Promises,\n   * and may reject those promises which will halt the .add() operation\n\n   * The function is called with the node's context\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   ",
                  "range": [
                    1543,
                    2126
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 2
                    },
                    "end": {
                      "line": 52,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Add the Dryad, make it play, make it start etc.\n   *\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   *\n   * Command middleware for add may return Promises which resolve on success; ie. when the thing is successfully booted, running etc.\n   ",
                  "range": [
                    2179,
                    2759
                  ],
                  "loc": {
                    "start": {
                      "line": 57,
                      "column": 2
                    },
                    "end": {
                      "line": 66,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "add",
                "range": [
                  2762,
                  2765
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 2
                  },
                  "end": {
                    "line": 67,
                    "column": 5
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "range": [
                          2791,
                          2793
                        ],
                        "loc": {
                          "start": {
                            "line": 68,
                            "column": 11
                          },
                          "end": {
                            "line": 68,
                            "column": 13
                          }
                        }
                      },
                      "range": [
                        2784,
                        2794
                      ],
                      "loc": {
                        "start": {
                          "line": 68,
                          "column": 4
                        },
                        "end": {
                          "line": 68,
                          "column": 14
                        }
                      }
                    }
                  ],
                  "range": [
                    2778,
                    2798
                  ],
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 18
                    },
                    "end": {
                      "line": 69,
                      "column": 3
                    }
                  },
                  "leadingComments": [
                    {
                      "type": "Block",
                      "value": "player",
                      "range": [
                        2766,
                        2776
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 6
                        },
                        "end": {
                          "line": 67,
                          "column": 16
                        }
                      }
                    }
                  ]
                },
                "generator": false,
                "expression": false,
                "range": [
                  2765,
                  2798
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 5
                  },
                  "end": {
                    "line": 69,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2762,
                2798
              ],
              "loc": {
                "start": {
                  "line": 67,
                  "column": 2
                },
                "end": {
                  "line": 69,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Add the Dryad, make it play, make it start etc.\n   *\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   *\n   * Command middleware for add may return Promises which resolve on success; ie. when the thing is successfully booted, running etc.\n   ",
                  "range": [
                    2179,
                    2759
                  ],
                  "loc": {
                    "start": {
                      "line": 57,
                      "column": 2
                    },
                    "end": {
                      "line": 66,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Remove the Dryad, make it stop etc.\n   *\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   *\n   * Command middleware for run may return Promises which resolve on success; ie. when the thing is successfully stopped, remove etc.\n   ",
                  "range": [
                    2802,
                    3370
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 2
                    },
                    "end": {
                      "line": 80,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "remove",
                "range": [
                  3373,
                  3379
                ],
                "loc": {
                  "start": {
                    "line": 81,
                    "column": 2
                  },
                  "end": {
                    "line": 81,
                    "column": 8
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "range": [
                          3405,
                          3407
                        ],
                        "loc": {
                          "start": {
                            "line": 82,
                            "column": 11
                          },
                          "end": {
                            "line": 82,
                            "column": 13
                          }
                        }
                      },
                      "range": [
                        3398,
                        3408
                      ],
                      "loc": {
                        "start": {
                          "line": 82,
                          "column": 4
                        },
                        "end": {
                          "line": 82,
                          "column": 14
                        }
                      }
                    }
                  ],
                  "range": [
                    3392,
                    3412
                  ],
                  "loc": {
                    "start": {
                      "line": 81,
                      "column": 21
                    },
                    "end": {
                      "line": 83,
                      "column": 3
                    }
                  },
                  "leadingComments": [
                    {
                      "type": "Block",
                      "value": "player",
                      "range": [
                        3380,
                        3390
                      ],
                      "loc": {
                        "start": {
                          "line": 81,
                          "column": 9
                        },
                        "end": {
                          "line": 81,
                          "column": 19
                        }
                      }
                    }
                  ]
                },
                "generator": false,
                "expression": false,
                "range": [
                  3379,
                  3412
                ],
                "loc": {
                  "start": {
                    "line": 81,
                    "column": 8
                  },
                  "end": {
                    "line": 83,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                3373,
                3412
              ],
              "loc": {
                "start": {
                  "line": 81,
                  "column": 2
                },
                "end": {
                  "line": 83,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Remove the Dryad, make it stop etc.\n   *\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   *\n   * Command middleware for run may return Promises which resolve on success; ie. when the thing is successfully stopped, remove etc.\n   ",
                  "range": [
                    2802,
                    3370
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 2
                    },
                    "end": {
                      "line": 80,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Dryad classes may return a subgraph of Dryads to replace itself\n   * in the play graph.\n   * This lets Dryads compose more complex behavior, add other Dryads that\n   * assist. Any Dryads supplied in properties should be included in the subgraph.\n   *\n   * The subgraph may also contain the Dryad itself in which case its .add .remove\n   * will be called. If subgraph is implemented but it does not include itself then\n   * .add / .remove will not be called.\n   ",
                  "range": [
                    3416,
                    3888
                  ],
                  "loc": {
                    "start": {
                      "line": 85,
                      "column": 2
                    },
                    "end": {
                      "line": 94,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "subgraph",
                "range": [
                  3891,
                  3899
                ],
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 2
                  },
                  "end": {
                    "line": 95,
                    "column": 10
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "range": [
                    3902,
                    3904
                  ],
                  "loc": {
                    "start": {
                      "line": 95,
                      "column": 13
                    },
                    "end": {
                      "line": 95,
                      "column": 15
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  3899,
                  3904
                ],
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 10
                  },
                  "end": {
                    "line": 95,
                    "column": 15
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                3891,
                3904
              ],
              "loc": {
                "start": {
                  "line": 95,
                  "column": 2
                },
                "end": {
                  "line": 95,
                  "column": 15
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Dryad classes may return a subgraph of Dryads to replace itself\n   * in the play graph.\n   * This lets Dryads compose more complex behavior, add other Dryads that\n   * assist. Any Dryads supplied in properties should be included in the subgraph.\n   *\n   * The subgraph may also contain the Dryad itself in which case its .add .remove\n   * will be called. If subgraph is implemented but it does not include itself then\n   * .add / .remove will not be called.\n   ",
                  "range": [
                    3416,
                    3888
                  ],
                  "loc": {
                    "start": {
                      "line": 85,
                      "column": 2
                    },
                    "end": {
                      "line": 94,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * When Dryad requires a parent Dryad to be somewhere above it then it\n   * may be specified by its class name here and the parent will be injected\n   * into the playgraph. This is similar to subgraph() but make it easy to\n   * do and is less error prone.\n   *\n   * Example: SCSynthDef compiles SynthDefs from source code and requires a supercollider SCLang interpreter as a parent to do that compilation. If there is not already an SCLang in the play graph then include one.\n   *\n   * @returns {String|undefined} - class name of required parent Dryad\n   ",
                  "range": [
                    3908,
                    4471
                  ],
                  "loc": {
                    "start": {
                      "line": 97,
                      "column": 2
                    },
                    "end": {
                      "line": 106,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "requireParent",
                "range": [
                  4474,
                  4487
                ],
                "loc": {
                  "start": {
                    "line": 107,
                    "column": 2
                  },
                  "end": {
                    "line": 107,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "range": [
                    4490,
                    4492
                  ],
                  "loc": {
                    "start": {
                      "line": 107,
                      "column": 18
                    },
                    "end": {
                      "line": 107,
                      "column": 20
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  4487,
                  4492
                ],
                "loc": {
                  "start": {
                    "line": 107,
                    "column": 15
                  },
                  "end": {
                    "line": 107,
                    "column": 20
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                4474,
                4492
              ],
              "loc": {
                "start": {
                  "line": 107,
                  "column": 2
                },
                "end": {
                  "line": 107,
                  "column": 20
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * When Dryad requires a parent Dryad to be somewhere above it then it\n   * may be specified by its class name here and the parent will be injected\n   * into the playgraph. This is similar to subgraph() but make it easy to\n   * do and is less error prone.\n   *\n   * Example: SCSynthDef compiles SynthDefs from source code and requires a supercollider SCLang interpreter as a parent to do that compilation. If there is not already an SCLang in the play graph then include one.\n   *\n   * @returns {String|undefined} - class name of required parent Dryad\n   ",
                  "range": [
                    3908,
                    4471
                  ],
                  "loc": {
                    "start": {
                      "line": 97,
                      "column": 2
                    },
                    "end": {
                      "line": 106,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Initial context\n   *\n   * This dryad's context is also the parent object for all children.\n   ",
                  "range": [
                    4496,
                    4601
                  ],
                  "loc": {
                    "start": {
                      "line": 109,
                      "column": 2
                    },
                    "end": {
                      "line": 113,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "initialContext",
                "range": [
                  4604,
                  4618
                ],
                "loc": {
                  "start": {
                    "line": 114,
                    "column": 2
                  },
                  "end": {
                    "line": 114,
                    "column": 16
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "range": [
                          4634,
                          4636
                        ],
                        "loc": {
                          "start": {
                            "line": 115,
                            "column": 11
                          },
                          "end": {
                            "line": 115,
                            "column": 13
                          }
                        }
                      },
                      "range": [
                        4627,
                        4637
                      ],
                      "loc": {
                        "start": {
                          "line": 115,
                          "column": 4
                        },
                        "end": {
                          "line": 115,
                          "column": 14
                        }
                      }
                    }
                  ],
                  "range": [
                    4621,
                    4641
                  ],
                  "loc": {
                    "start": {
                      "line": 114,
                      "column": 19
                    },
                    "end": {
                      "line": 116,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  4618,
                  4641
                ],
                "loc": {
                  "start": {
                    "line": 114,
                    "column": 16
                  },
                  "end": {
                    "line": 116,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                4604,
                4641
              ],
              "loc": {
                "start": {
                  "line": 114,
                  "column": 2
                },
                "end": {
                  "line": 116,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Initial context\n   *\n   * This dryad's context is also the parent object for all children.\n   ",
                  "range": [
                    4496,
                    4601
                  ],
                  "loc": {
                    "start": {
                      "line": 109,
                      "column": 2
                    },
                    "end": {
                      "line": 113,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Context for child; used when creating initial context for a node\n   *\n   * Note that the child already inherits from this context.\n   *\n   * will deprecate this. nothing is using it\n   * @deprecated\n   ",
                  "range": [
                    4645,
                    4858
                  ],
                  "loc": {
                    "start": {
                      "line": 118,
                      "column": 2
                    },
                    "end": {
                      "line": 125,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "childContext",
                "range": [
                  4861,
                  4873
                ],
                "loc": {
                  "start": {
                    "line": 126,
                    "column": 2
                  },
                  "end": {
                    "line": 126,
                    "column": 14
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "range": [
                          4889,
                          4891
                        ],
                        "loc": {
                          "start": {
                            "line": 127,
                            "column": 11
                          },
                          "end": {
                            "line": 127,
                            "column": 13
                          }
                        }
                      },
                      "range": [
                        4882,
                        4892
                      ],
                      "loc": {
                        "start": {
                          "line": 127,
                          "column": 4
                        },
                        "end": {
                          "line": 127,
                          "column": 14
                        }
                      }
                    }
                  ],
                  "range": [
                    4876,
                    4896
                  ],
                  "loc": {
                    "start": {
                      "line": 126,
                      "column": 17
                    },
                    "end": {
                      "line": 128,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  4873,
                  4896
                ],
                "loc": {
                  "start": {
                    "line": 126,
                    "column": 14
                  },
                  "end": {
                    "line": 128,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                4861,
                4896
              ],
              "loc": {
                "start": {
                  "line": 126,
                  "column": 2
                },
                "end": {
                  "line": 128,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Context for child; used when creating initial context for a node\n   *\n   * Note that the child already inherits from this context.\n   *\n   * will deprecate this. nothing is using it\n   * @deprecated\n   ",
                  "range": [
                    4645,
                    4858
                  ],
                  "loc": {
                    "start": {
                      "line": 118,
                      "column": 2
                    },
                    "end": {
                      "line": 125,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * This method is never actually called, but merely because its implemented\n   * (dryad.isDryad is not undefined) it marks the things as being a Dryad.\n   *\n   * @returns {Boolean}\n   ",
                  "range": [
                    4900,
                    5092
                  ],
                  "loc": {
                    "start": {
                      "line": 130,
                      "column": 2
                    },
                    "end": {
                      "line": 135,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "isDryad",
                "range": [
                  5099,
                  5106
                ],
                "loc": {
                  "start": {
                    "line": 136,
                    "column": 6
                  },
                  "end": {
                    "line": 136,
                    "column": 13
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "range": [
                          5122,
                          5126
                        ],
                        "loc": {
                          "start": {
                            "line": 137,
                            "column": 11
                          },
                          "end": {
                            "line": 137,
                            "column": 15
                          }
                        }
                      },
                      "range": [
                        5115,
                        5127
                      ],
                      "loc": {
                        "start": {
                          "line": 137,
                          "column": 4
                        },
                        "end": {
                          "line": 137,
                          "column": 16
                        }
                      }
                    }
                  ],
                  "range": [
                    5109,
                    5131
                  ],
                  "loc": {
                    "start": {
                      "line": 136,
                      "column": 16
                    },
                    "end": {
                      "line": 138,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  5106,
                  5131
                ],
                "loc": {
                  "start": {
                    "line": 136,
                    "column": 13
                  },
                  "end": {
                    "line": 138,
                    "column": 3
                  }
                }
              },
              "kind": "get",
              "computed": false,
              "range": [
                5095,
                5131
              ],
              "loc": {
                "start": {
                  "line": 136,
                  "column": 2
                },
                "end": {
                  "line": 138,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * This method is never actually called, but merely because its implemented\n   * (dryad.isDryad is not undefined) it marks the things as being a Dryad.\n   *\n   * @returns {Boolean}\n   ",
                  "range": [
                    4900,
                    5092
                  ],
                  "loc": {
                    "start": {
                      "line": 130,
                      "column": 2
                    },
                    "end": {
                      "line": 135,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * This method is never actually called, but merely because its implemented\n   * (MyDryad.isDryadSubclass is not undefined) it marks the thing as being a Dryad subclass.\n   *\n   * @returns {Boolean}\n   ",
                  "range": [
                    5135,
                    5345
                  ],
                  "loc": {
                    "start": {
                      "line": 140,
                      "column": 2
                    },
                    "end": {
                      "line": 145,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "isDryadSubclass",
                "range": [
                  5355,
                  5370
                ],
                "loc": {
                  "start": {
                    "line": 146,
                    "column": 9
                  },
                  "end": {
                    "line": 146,
                    "column": 24
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": true,
                        "raw": "true",
                        "range": [
                          5386,
                          5390
                        ],
                        "loc": {
                          "start": {
                            "line": 147,
                            "column": 11
                          },
                          "end": {
                            "line": 147,
                            "column": 15
                          }
                        }
                      },
                      "range": [
                        5379,
                        5391
                      ],
                      "loc": {
                        "start": {
                          "line": 147,
                          "column": 4
                        },
                        "end": {
                          "line": 147,
                          "column": 16
                        }
                      }
                    }
                  ],
                  "range": [
                    5373,
                    5395
                  ],
                  "loc": {
                    "start": {
                      "line": 146,
                      "column": 27
                    },
                    "end": {
                      "line": 148,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  5370,
                  5395
                ],
                "loc": {
                  "start": {
                    "line": 146,
                    "column": 24
                  },
                  "end": {
                    "line": 148,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                5348,
                5395
              ],
              "loc": {
                "start": {
                  "line": 146,
                  "column": 2
                },
                "end": {
                  "line": 148,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * This method is never actually called, but merely because its implemented\n   * (MyDryad.isDryadSubclass is not undefined) it marks the thing as being a Dryad subclass.\n   *\n   * @returns {Boolean}\n   ",
                  "range": [
                    5135,
                    5345
                  ],
                  "loc": {
                    "start": {
                      "line": 140,
                      "column": 2
                    },
                    "end": {
                      "line": 145,
                      "column": 5
                    }
                  }
                }
              ],
              "static": true
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "clone",
                "range": [
                  5399,
                  5404
                ],
                "loc": {
                  "start": {
                    "line": 150,
                    "column": 2
                  },
                  "end": {
                    "line": 150,
                    "column": 7
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "dup",
                            "range": [
                              5417,
                              5420
                            ],
                            "loc": {
                              "start": {
                                "line": 151,
                                "column": 8
                              },
                              "end": {
                                "line": 151,
                                "column": 11
                              }
                            }
                          },
                          "init": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                                "range": [
                                  5427,
                                  5431
                                ],
                                "loc": {
                                  "start": {
                                    "line": 151,
                                    "column": 18
                                  },
                                  "end": {
                                    "line": 151,
                                    "column": 22
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "constructor",
                                "range": [
                                  5432,
                                  5443
                                ],
                                "loc": {
                                  "start": {
                                    "line": 151,
                                    "column": 23
                                  },
                                  "end": {
                                    "line": 151,
                                    "column": 34
                                  }
                                }
                              },
                              "range": [
                                5427,
                                5443
                              ],
                              "loc": {
                                "start": {
                                  "line": 151,
                                  "column": 18
                                },
                                "end": {
                                  "line": 151,
                                  "column": 34
                                }
                              }
                            },
                            "arguments": [],
                            "range": [
                              5423,
                              5445
                            ],
                            "loc": {
                              "start": {
                                "line": 151,
                                "column": 14
                              },
                              "end": {
                                "line": 151,
                                "column": 36
                              }
                            }
                          },
                          "range": [
                            5417,
                            5445
                          ],
                          "loc": {
                            "start": {
                              "line": 151,
                              "column": 8
                            },
                            "end": {
                              "line": 151,
                              "column": 36
                            }
                          }
                        }
                      ],
                      "kind": "let",
                      "range": [
                        5413,
                        5446
                      ],
                      "loc": {
                        "start": {
                          "line": 151,
                          "column": 4
                        },
                        "end": {
                          "line": 151,
                          "column": 37
                        }
                      }
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "cloneValue",
                            "range": [
                              5455,
                              5465
                            ],
                            "loc": {
                              "start": {
                                "line": 152,
                                "column": 8
                              },
                              "end": {
                                "line": 152,
                                "column": 18
                              }
                            }
                          },
                          "init": {
                            "type": "ArrowFunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "c",
                                "range": [
                                  5469,
                                  5470
                                ],
                                "loc": {
                                  "start": {
                                    "line": 152,
                                    "column": 22
                                  },
                                  "end": {
                                    "line": 152,
                                    "column": 23
                                  }
                                }
                              }
                            ],
                            "body": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "c",
                                  "range": [
                                    5476,
                                    5477
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 152,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 152,
                                      "column": 30
                                    }
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "c",
                                    "range": [
                                      5481,
                                      5482
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 152,
                                        "column": 34
                                      },
                                      "end": {
                                        "line": 152,
                                        "column": 35
                                      }
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "isDryad",
                                    "range": [
                                      5483,
                                      5490
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 152,
                                        "column": 36
                                      },
                                      "end": {
                                        "line": 152,
                                        "column": 43
                                      }
                                    }
                                  },
                                  "range": [
                                    5481,
                                    5490
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 152,
                                      "column": 34
                                    },
                                    "end": {
                                      "line": 152,
                                      "column": 43
                                    }
                                  }
                                },
                                "range": [
                                  5476,
                                  5490
                                ],
                                "loc": {
                                  "start": {
                                    "line": 152,
                                    "column": 29
                                  },
                                  "end": {
                                    "line": 152,
                                    "column": 43
                                  }
                                }
                              },
                              "consequent": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "c",
                                    "range": [
                                      5494,
                                      5495
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 152,
                                        "column": 47
                                      },
                                      "end": {
                                        "line": 152,
                                        "column": 48
                                      }
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "clone",
                                    "range": [
                                      5496,
                                      5501
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 152,
                                        "column": 49
                                      },
                                      "end": {
                                        "line": 152,
                                        "column": 54
                                      }
                                    }
                                  },
                                  "range": [
                                    5494,
                                    5501
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 152,
                                      "column": 47
                                    },
                                    "end": {
                                      "line": 152,
                                      "column": 54
                                    }
                                  }
                                },
                                "arguments": [],
                                "range": [
                                  5494,
                                  5503
                                ],
                                "loc": {
                                  "start": {
                                    "line": 152,
                                    "column": 47
                                  },
                                  "end": {
                                    "line": 152,
                                    "column": 56
                                  }
                                }
                              },
                              "alternate": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "_",
                                    "range": [
                                      5506,
                                      5507
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 152,
                                        "column": 59
                                      },
                                      "end": {
                                        "line": 152,
                                        "column": 60
                                      }
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "clone",
                                    "range": [
                                      5508,
                                      5513
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 152,
                                        "column": 61
                                      },
                                      "end": {
                                        "line": 152,
                                        "column": 66
                                      }
                                    }
                                  },
                                  "range": [
                                    5506,
                                    5513
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 152,
                                      "column": 59
                                    },
                                    "end": {
                                      "line": 152,
                                      "column": 66
                                    }
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "c",
                                    "range": [
                                      5514,
                                      5515
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 152,
                                        "column": 67
                                      },
                                      "end": {
                                        "line": 152,
                                        "column": 68
                                      }
                                    }
                                  }
                                ],
                                "range": [
                                  5506,
                                  5516
                                ],
                                "loc": {
                                  "start": {
                                    "line": 152,
                                    "column": 59
                                  },
                                  "end": {
                                    "line": 152,
                                    "column": 69
                                  }
                                }
                              },
                              "range": [
                                5475,
                                5516
                              ],
                              "loc": {
                                "start": {
                                  "line": 152,
                                  "column": 28
                                },
                                "end": {
                                  "line": 152,
                                  "column": 69
                                }
                              }
                            },
                            "generator": false,
                            "expression": true,
                            "range": [
                              5468,
                              5516
                            ],
                            "loc": {
                              "start": {
                                "line": 152,
                                "column": 21
                              },
                              "end": {
                                "line": 152,
                                "column": 69
                              }
                            }
                          },
                          "range": [
                            5455,
                            5516
                          ],
                          "loc": {
                            "start": {
                              "line": 152,
                              "column": 8
                            },
                            "end": {
                              "line": 152,
                              "column": 69
                            }
                          }
                        }
                      ],
                      "kind": "let",
                      "range": [
                        5451,
                        5517
                      ],
                      "loc": {
                        "start": {
                          "line": 152,
                          "column": 4
                        },
                        "end": {
                          "line": 152,
                          "column": 70
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "dup",
                            "range": [
                              5522,
                              5525
                            ],
                            "loc": {
                              "start": {
                                "line": 153,
                                "column": 4
                              },
                              "end": {
                                "line": 153,
                                "column": 7
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "properties",
                            "range": [
                              5526,
                              5536
                            ],
                            "loc": {
                              "start": {
                                "line": 153,
                                "column": 8
                              },
                              "end": {
                                "line": 153,
                                "column": 18
                              }
                            }
                          },
                          "range": [
                            5522,
                            5536
                          ],
                          "loc": {
                            "start": {
                              "line": 153,
                              "column": 4
                            },
                            "end": {
                              "line": 153,
                              "column": 18
                            }
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "_",
                              "range": [
                                5539,
                                5540
                              ],
                              "loc": {
                                "start": {
                                  "line": 153,
                                  "column": 21
                                },
                                "end": {
                                  "line": 153,
                                  "column": 22
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "mapObject",
                              "range": [
                                5541,
                                5550
                              ],
                              "loc": {
                                "start": {
                                  "line": 153,
                                  "column": 23
                                },
                                "end": {
                                  "line": 153,
                                  "column": 32
                                }
                              }
                            },
                            "range": [
                              5539,
                              5550
                            ],
                            "loc": {
                              "start": {
                                "line": 153,
                                "column": 21
                              },
                              "end": {
                                "line": 153,
                                "column": 32
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                                "range": [
                                  5551,
                                  5555
                                ],
                                "loc": {
                                  "start": {
                                    "line": 153,
                                    "column": 33
                                  },
                                  "end": {
                                    "line": 153,
                                    "column": 37
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "properties",
                                "range": [
                                  5556,
                                  5566
                                ],
                                "loc": {
                                  "start": {
                                    "line": 153,
                                    "column": 38
                                  },
                                  "end": {
                                    "line": 153,
                                    "column": 48
                                  }
                                }
                              },
                              "range": [
                                5551,
                                5566
                              ],
                              "loc": {
                                "start": {
                                  "line": 153,
                                  "column": 33
                                },
                                "end": {
                                  "line": 153,
                                  "column": 48
                                }
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "cloneValue",
                              "range": [
                                5568,
                                5578
                              ],
                              "loc": {
                                "start": {
                                  "line": 153,
                                  "column": 50
                                },
                                "end": {
                                  "line": 153,
                                  "column": 60
                                }
                              }
                            }
                          ],
                          "range": [
                            5539,
                            5579
                          ],
                          "loc": {
                            "start": {
                              "line": 153,
                              "column": 21
                            },
                            "end": {
                              "line": 153,
                              "column": 61
                            }
                          }
                        },
                        "range": [
                          5522,
                          5579
                        ],
                        "loc": {
                          "start": {
                            "line": 153,
                            "column": 4
                          },
                          "end": {
                            "line": 153,
                            "column": 61
                          }
                        }
                      },
                      "range": [
                        5522,
                        5580
                      ],
                      "loc": {
                        "start": {
                          "line": 153,
                          "column": 4
                        },
                        "end": {
                          "line": 153,
                          "column": 62
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "dup",
                            "range": [
                              5585,
                              5588
                            ],
                            "loc": {
                              "start": {
                                "line": 154,
                                "column": 4
                              },
                              "end": {
                                "line": 154,
                                "column": 7
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "children",
                            "range": [
                              5589,
                              5597
                            ],
                            "loc": {
                              "start": {
                                "line": 154,
                                "column": 8
                              },
                              "end": {
                                "line": 154,
                                "column": 16
                              }
                            }
                          },
                          "range": [
                            5585,
                            5597
                          ],
                          "loc": {
                            "start": {
                              "line": 154,
                              "column": 4
                            },
                            "end": {
                              "line": 154,
                              "column": 16
                            }
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression",
                                "range": [
                                  5600,
                                  5604
                                ],
                                "loc": {
                                  "start": {
                                    "line": 154,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 154,
                                    "column": 23
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "children",
                                "range": [
                                  5605,
                                  5613
                                ],
                                "loc": {
                                  "start": {
                                    "line": 154,
                                    "column": 24
                                  },
                                  "end": {
                                    "line": 154,
                                    "column": 32
                                  }
                                }
                              },
                              "range": [
                                5600,
                                5613
                              ],
                              "loc": {
                                "start": {
                                  "line": 154,
                                  "column": 19
                                },
                                "end": {
                                  "line": 154,
                                  "column": 32
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "map",
                              "range": [
                                5614,
                                5617
                              ],
                              "loc": {
                                "start": {
                                  "line": 154,
                                  "column": 33
                                },
                                "end": {
                                  "line": 154,
                                  "column": 36
                                }
                              }
                            },
                            "range": [
                              5600,
                              5617
                            ],
                            "loc": {
                              "start": {
                                "line": 154,
                                "column": 19
                              },
                              "end": {
                                "line": 154,
                                "column": 36
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "cloneValue",
                              "range": [
                                5618,
                                5628
                              ],
                              "loc": {
                                "start": {
                                  "line": 154,
                                  "column": 37
                                },
                                "end": {
                                  "line": 154,
                                  "column": 47
                                }
                              }
                            }
                          ],
                          "range": [
                            5600,
                            5629
                          ],
                          "loc": {
                            "start": {
                              "line": 154,
                              "column": 19
                            },
                            "end": {
                              "line": 154,
                              "column": 48
                            }
                          }
                        },
                        "range": [
                          5585,
                          5629
                        ],
                        "loc": {
                          "start": {
                            "line": 154,
                            "column": 4
                          },
                          "end": {
                            "line": 154,
                            "column": 48
                          }
                        }
                      },
                      "range": [
                        5585,
                        5630
                      ],
                      "loc": {
                        "start": {
                          "line": 154,
                          "column": 4
                        },
                        "end": {
                          "line": 154,
                          "column": 49
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "dup",
                        "range": [
                          5642,
                          5645
                        ],
                        "loc": {
                          "start": {
                            "line": 155,
                            "column": 11
                          },
                          "end": {
                            "line": 155,
                            "column": 14
                          }
                        }
                      },
                      "range": [
                        5635,
                        5646
                      ],
                      "loc": {
                        "start": {
                          "line": 155,
                          "column": 4
                        },
                        "end": {
                          "line": 155,
                          "column": 15
                        }
                      }
                    }
                  ],
                  "range": [
                    5407,
                    5650
                  ],
                  "loc": {
                    "start": {
                      "line": 150,
                      "column": 10
                    },
                    "end": {
                      "line": 156,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  5404,
                  5650
                ],
                "loc": {
                  "start": {
                    "line": 150,
                    "column": 7
                  },
                  "end": {
                    "line": 156,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                5399,
                5650
              ],
              "loc": {
                "start": {
                  "line": 150,
                  "column": 2
                },
                "end": {
                  "line": 156,
                  "column": 3
                }
              },
              "static": false
            }
          ],
          "range": [
            1135,
            5652
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 27
            },
            "end": {
              "line": 157,
              "column": 1
            }
          }
        },
        "range": [
          1123,
          5652
        ],
        "loc": {
          "start": {
            "line": 23,
            "column": 15
          },
          "end": {
            "line": 157,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * >> A dryad (/ˈdraɪ.æd/; Greek: Δρυάδες, sing.: Δρυάς) is a tree nymph, or female tree spirit, in Greek mythology\n *\n * A Dryad is a component for managing the creation and control of something.\n *\n * For instance that 'something' could be a SuperCollider Synth, or a MIDI connection, SVG or Canvas in a webrowser,\n * a datasource, a web resource to fetch or an external process.\n *\n * It is anything that you want to specify parameters for and then create according to those parameters.\n *\n * Dryads have properties and children but do not hold any internal state.\n * Their methods are passed a context object and they perform their functionality\n * based on their properties (what they are supposed to be / to do) and the context\n * which holds the state, temporary variables they need for operation (like supercollider node ids) and gives them access to variables defined by parent nodes in the play graph.\n *\n * They provide functionality by return command objects which are processed by\n * command middleware which is supplied by various Dryadic packages.\n ",
            "range": [
              35,
              1105
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        1108,
        5652
      ],
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 157,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * >> A dryad (/ˈdraɪ.æd/; Greek: Δρυάδες, sing.: Δρυάς) is a tree nymph, or female tree spirit, in Greek mythology\n *\n * A Dryad is a component for managing the creation and control of something.\n *\n * For instance that 'something' could be a SuperCollider Synth, or a MIDI connection, SVG or Canvas in a webrowser,\n * a datasource, a web resource to fetch or an external process.\n *\n * It is anything that you want to specify parameters for and then create according to those parameters.\n *\n * Dryads have properties and children but do not hold any internal state.\n * Their methods are passed a context object and they perform their functionality\n * based on their properties (what they are supposed to be / to do) and the context\n * which holds the state, temporary variables they need for operation (like supercollider node ids) and gives them access to variables defined by parent nodes in the play graph.\n *\n * They provide functionality by return command objects which are processed by\n * command middleware which is supplied by various Dryadic packages.\n ",
          "range": [
            35,
            1105
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    5652
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 157,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * >> A dryad (/ˈdraɪ.æd/; Greek: Δρυάδες, sing.: Δρυάς) is a tree nymph, or female tree spirit, in Greek mythology\n *\n * A Dryad is a component for managing the creation and control of something.\n *\n * For instance that 'something' could be a SuperCollider Synth, or a MIDI connection, SVG or Canvas in a webrowser,\n * a datasource, a web resource to fetch or an external process.\n *\n * It is anything that you want to specify parameters for and then create according to those parameters.\n *\n * Dryads have properties and children but do not hold any internal state.\n * Their methods are passed a context object and they perform their functionality\n * based on their properties (what they are supposed to be / to do) and the context\n * which holds the state, temporary variables they need for operation (like supercollider node ids) and gives them access to variables defined by parent nodes in the play graph.\n *\n * They provide functionality by return command objects which are processed by\n * command middleware which is supplied by various Dryadic packages.\n ",
      "range": [
        35,
        1105
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Subclasses should not implement constructor.\n   * All Dryad classes take properties and children.\n   ",
      "range": [
        1140,
        1252
      ],
      "loc": {
        "start": {
          "line": 25,
          "column": 2
        },
        "end": {
          "line": 28,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Defaults properties if none are supplied\n   ",
      "range": [
        1441,
        1496
      ],
      "loc": {
        "start": {
          "line": 35,
          "column": 2
        },
        "end": {
          "line": 37,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Values of the command objects are functions may return Promises,\n   * and may reject those promises which will halt the .add() operation\n\n   * The function is called with the node's context\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   ",
      "range": [
        1543,
        2126
      ],
      "loc": {
        "start": {
          "line": 42,
          "column": 2
        },
        "end": {
          "line": 52,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "player",
      "range": [
        2143,
        2153
      ],
      "loc": {
        "start": {
          "line": 53,
          "column": 16
        },
        "end": {
          "line": 53,
          "column": 26
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Add the Dryad, make it play, make it start etc.\n   *\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   *\n   * Command middleware for add may return Promises which resolve on success; ie. when the thing is successfully booted, running etc.\n   ",
      "range": [
        2179,
        2759
      ],
      "loc": {
        "start": {
          "line": 57,
          "column": 2
        },
        "end": {
          "line": 66,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "player",
      "range": [
        2766,
        2776
      ],
      "loc": {
        "start": {
          "line": 67,
          "column": 6
        },
        "end": {
          "line": 67,
          "column": 16
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Remove the Dryad, make it stop etc.\n   *\n   * Returns a command object or a function that is called with node context and will return a command object.\n   *\n   * Middleware supplied by layers will match command keys and will be passed the value.\n   * Value is either an object that the middleware uses to do whatever it does (launch things, send messages) or is a function that take context and returns the object.\n   *\n   * Command middleware for run may return Promises which resolve on success; ie. when the thing is successfully stopped, remove etc.\n   ",
      "range": [
        2802,
        3370
      ],
      "loc": {
        "start": {
          "line": 71,
          "column": 2
        },
        "end": {
          "line": 80,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "player",
      "range": [
        3380,
        3390
      ],
      "loc": {
        "start": {
          "line": 81,
          "column": 9
        },
        "end": {
          "line": 81,
          "column": 19
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Dryad classes may return a subgraph of Dryads to replace itself\n   * in the play graph.\n   * This lets Dryads compose more complex behavior, add other Dryads that\n   * assist. Any Dryads supplied in properties should be included in the subgraph.\n   *\n   * The subgraph may also contain the Dryad itself in which case its .add .remove\n   * will be called. If subgraph is implemented but it does not include itself then\n   * .add / .remove will not be called.\n   ",
      "range": [
        3416,
        3888
      ],
      "loc": {
        "start": {
          "line": 85,
          "column": 2
        },
        "end": {
          "line": 94,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * When Dryad requires a parent Dryad to be somewhere above it then it\n   * may be specified by its class name here and the parent will be injected\n   * into the playgraph. This is similar to subgraph() but make it easy to\n   * do and is less error prone.\n   *\n   * Example: SCSynthDef compiles SynthDefs from source code and requires a supercollider SCLang interpreter as a parent to do that compilation. If there is not already an SCLang in the play graph then include one.\n   *\n   * @returns {String|undefined} - class name of required parent Dryad\n   ",
      "range": [
        3908,
        4471
      ],
      "loc": {
        "start": {
          "line": 97,
          "column": 2
        },
        "end": {
          "line": 106,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Initial context\n   *\n   * This dryad's context is also the parent object for all children.\n   ",
      "range": [
        4496,
        4601
      ],
      "loc": {
        "start": {
          "line": 109,
          "column": 2
        },
        "end": {
          "line": 113,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Context for child; used when creating initial context for a node\n   *\n   * Note that the child already inherits from this context.\n   *\n   * will deprecate this. nothing is using it\n   * @deprecated\n   ",
      "range": [
        4645,
        4858
      ],
      "loc": {
        "start": {
          "line": 118,
          "column": 2
        },
        "end": {
          "line": 125,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * This method is never actually called, but merely because its implemented\n   * (dryad.isDryad is not undefined) it marks the things as being a Dryad.\n   *\n   * @returns {Boolean}\n   ",
      "range": [
        4900,
        5092
      ],
      "loc": {
        "start": {
          "line": 130,
          "column": 2
        },
        "end": {
          "line": 135,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * This method is never actually called, but merely because its implemented\n   * (MyDryad.isDryadSubclass is not undefined) it marks the thing as being a Dryad subclass.\n   *\n   * @returns {Boolean}\n   ",
      "range": [
        5135,
        5345
      ],
      "loc": {
        "start": {
          "line": 140,
          "column": 2
        },
        "end": {
          "line": 145,
          "column": 5
        }
      }
    }
  ]
}
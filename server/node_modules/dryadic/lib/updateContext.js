'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = updateContext;

var _isFunction = require('lodash/isFunction');

var _isFunction2 = _interopRequireDefault(_isFunction);

var _keys = require('lodash/keys');

var _keys2 = _interopRequireDefault(_keys);

var _isPlainObject = require('is-plain-object');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _bluebird = require('bluebird');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Updates the player's context using DryadTree.updateContext
 *
 * Usage:
 *
 * Simplest example. The context is updated with someKey = 'someValue'
 *
 *  add() {
 *   return {
 *    updateContext: {
 *      someKey: 'someValue'
 *    }
 *   };
 *  }
 *
 * or:
 *
 *  prepareForAdd() {
 *    return {
 *      // return a function that will be called at command execution time
 *      updateContext: (context, properties) => {
 *        let nodeID = generateNextId();
 *        // these are the values that will be updated into context
 *        return {
 *          nodeID: nodeID,
 *          pid: startSomeProcess()  // any value that is a Promise will be resolved
 *        };
 *      }
 *    };
 *  }
 *
 */
function updateContext(command, context, properties, updater) {
  if (command.updateContext) {
    var uc = (0, _isFunction2.default)(command.updateContext) ? command.updateContext(context, properties) : command.updateContext;
    return resolveValues(uc).then(function (updates) {
      updater(context, updates);
    });
  }
}

function resolveValues(object) {
  var ks = (0, _keys2.default)(object);
  return _bluebird.Promise.map(ks, function (key) {
    var value = object[key];
    // if is object then go deep
    return _bluebird.Promise.resolve((0, _isPlainObject2.default)(value) ? resolveValues(value) : value);
  }).then(function (values) {
    var result = {};
    ks.forEach(function (key, i) {
      result[key] = values[i];
    });
    return result;
  });
}
//# sourceMappingURL=updateContext.js.map
{"version":3,"sources":["../src/run.js"],"names":["run","command","context","properties"],"mappings":";;;;;kBAsBwBA,G;;AArBxB;;;;;;;;;;;;;;;;;;;;;AAqBe,SAASA,GAAT,CAAaC,OAAb,EAA6BC,OAA7B,EAA6CC,UAA7C,EAAiF;AAC9F,MAAIF,QAAQD,GAAZ,EAAiB;AACf,WAAOC,QAAQD,GAAR,CAAYE,OAAZ,EAAqBC,UAArB,CAAP;AACD;AACF","file":"run.js","sourcesContent":["/* @flow */\n/**\n * Calls a function, supplying the Dryad's context.\n * May return a Promise for success/failure\n *\n * Usage:\n *\n *  add() {\n *   return {\n *    run: (context) => {\n *       return new Promise((resolve, reject) => {\n *        // do something async like start a process,\n *        // fetch an image etc.\n *        // Dryad's properties: this.properties\n *        // Dryad's runtime context: context\n *        // on success call:\n *         resolve();\n *       });\n *     }\n *   };\n *  }\n */\nexport default function run(command:Object, context:Object, properties:Object) : any|Promise<*> {\n  if (command.run) {\n    return command.run(context, properties);\n  }\n}\n"]}
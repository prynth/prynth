{"version":3,"sources":["../../../src/server/internals/Store.js"],"names":["Store","state","keys","notSetValue","getIn","fn","updateIn","result","subState","setIn"],"mappings":";;;;;;;;;;AACA;;;;AAEA;;;;;;;;;;IAUqBA,K;AAGnB,mBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,qBAAb;AACD;;;;0BAEKC,I,EAAqBC,W,EAAuB;AAChD,aAAO,KAAKF,KAAL,CAAWG,KAAX,CAAiBF,IAAjB,EAAuBC,WAAvB,CAAP;AACD;;AAED;;;;;;;gCAIYD,I,EAAqBG,E,EAAc;AAC7C,WAAKJ,KAAL,GAAa,KAAKA,KAAL,CAAWK,QAAX,CAAoBJ,IAApB,EAA0B,qBAA1B,EAAiCG,EAAjC,CAAb;AACD;;AAED;;;;;;;;;;;yCAQqBH,I,EAAqBG,E,EAAmB;AAC3D,UAAIE,MAAJ,EAAYC,QAAZ;;AAD2D,gBAEtCH,GAAG,KAAKJ,KAAL,CAAWG,KAAX,CAAiBF,IAAjB,EAAuB,qBAAvB,CAAH,CAFsC;;AAAA;;AAE1DK,YAF0D;AAElDC,cAFkD;;AAG3D,WAAKP,KAAL,GAAa,KAAKA,KAAL,CAAWQ,KAAX,CAAiBP,IAAjB,EAAuBM,QAAvB,CAAb;AACA,aAAOD,MAAP;AACD;;;;;;kBAhCkBP,K","file":"Store.js","sourcesContent":["/* @flow */\nimport { Map } from 'immutable';\n\n/**\n * A Store that holds a state tree. This is used by ServerState as\n * its immutable memory storage.\n *\n * Holds an Immutable.Map\n * and offers functions to mutate sub-states\n * in that tree, and stores the new state.\n *\n * https://facebook.github.io/immutable-js/docs/#/Map\n */\nexport default class Store {\n  state: Map<string, any>;\n\n  constructor() {\n    this.state = Map();\n  }\n\n  getIn(keys: Array<string>, notSetValue: any): any {\n    return this.state.getIn(keys, notSetValue);\n  }\n\n  /**\n   * Fetch the object at keys\n   * pass it to the function which mutates it and returns new sub state.\n   */\n  mutateState(keys: Array<string>, fn: Function) {\n    this.state = this.state.updateIn(keys, Map(), fn);\n  }\n\n  /**\n   * Fetch one part of the state,\n   * mutate it with the callback,\n   * which returns result, subState.\n   * Save the subState back into state and return the result.\n   *\n   * @returns {any} result\n   */\n  mutateStateAndReturn(keys: Array<string>, fn: Function): any {\n    var result, subState;\n    [result, subState] = fn(this.state.getIn(keys, Map()));\n    this.state = this.state.setIn(keys, subState);\n    return result;\n  }\n}\n"]}
{"version":3,"sources":["../../../src/server/dryads/Server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,cAAc,GAAG;AACrB,OAAK,EAAE,KAAK;AACZ,MAAI,EAAE,IAAI;AACV,OAAK,EAAE,KAAK;CACb;;;;;;;AAAC;IAOW,MAAM,WAAN,MAAM;YAAN,MAAM;;AAEjB,WAFW,MAAM,GAEoB;QAAzB,OAAO,yDAAC,EAAE;QAAE,QAAQ,yDAAC,EAAE;;0BAFxB,MAAM;;kEAAN,MAAM,aAGT,EAAC,OAAO,EAAP,OAAO,EAAC,EAAE,QAAQ;GAC1B;;eAJU,MAAM;;uCAME;AACjB,UAAM,OAAO,GAAG,qBAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;AACpE,UAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC;;;AAAC,AAGnC,aAAO;AACL,eAAO,EAAE;AACP,gBAAM,EAAN,MAAM;SACP;AACD,aAAK,EAAE;AACL,gBAAM,EAAN,MAAM;SACP;AACD,iBAAS,EAAE,qBAAM;AACf,iBAAO,MAAM,CAAC,IAAI,EAAE,CAAC;SACtB;OACF,CAAC;KACH;;;4BAEO,OAAO,EAAE,KAAK,EAAE;AACtB,aAAO;AACL,iBAAS,EAAE,qBAAM;AACf,iBAAO,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SAC5B;OACF,CAAC;KACH;;;SA9BU,MAAM;WAfX,KAAK","file":"Server.js","sourcesContent":["\nimport {Dryad} from '../../dryadic/Dryad';\nimport _ from 'underscore';\n\n\nconst defaultOptions = {\n  stdin: false,\n  echo: true,  // that will make it post OSC send/recv\n  debug: false\n};\n\n/**\n * Boots a new supercollider server making it available for all children.\n *\n * Always boots a new one, ignoring any possibly already existing one in context.\n */\nexport class Server extends Dryad {\n\n  constructor(options={}, children=[]) {\n    super({options}, children);\n  }\n\n  mount(/*context*/) {\n    const options = _.defaults(this.properties.options, defaultOptions);\n    const server = new Server(options);\n\n    // should\n    return {\n      context: {\n        server\n      },\n      state: {\n        server\n      },\n      completed: () => {\n        return server.boot();\n      }\n    };\n  }\n\n  unmount(context, state) {\n    return {\n      completed: () => {\n        return state.server.quit();\n      }\n    };\n  }\n}\n"]}
{"version":3,"sources":["../../src/server/dryadic.js"],"names":[],"mappings":";;;;;;;;;;;;;;0BACc,YAAY;;;;oCACS,0BAA0B;;wBACvC,UAAU;;AAGhC,kBAAQ,4BAA4B,CAAC,UAAC,KAAK,EAAE,OAAO,EAAK;AACvD,SAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,QAAM,KAAK,CAAC,KAAK,CAAC,CAAC;CACpB,CAAC,CAAC;;AAGI,SAAS,OAAO,CAAC,EAAE,EAA6C;MAA3C,cAAc,yDAAC,KAAK;MAAE,aAAa,yDAAC,KAAK;;AACnE,SAAO,UAAC,aAAa,EAAK;AACxB,WAAO,WAAW,CAAC,aAAa,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GAC3E,CAAC;CACH;;;;;;;;;;AASM,SAAS,WAAW,CAAC,aAAa,EAA6C;MAA3C,cAAc,yDAAC,KAAK;MAAE,aAAa,yDAAC,KAAK;;AAClF,MAAI,OAAO,GAAG,wBAAE,MAAM,CAAC,EAAC,EAAE,EAAE,GAAG,EAAC,EAAE,aAAa,CAAC,CAAC;;AAEjD,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAI,cAAc,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACrC,QAAI,CAAC,MAAM,mCAAa,CAAC;GAC1B;AACD,MAAI,aAAa,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAClC,QAAI,CAAC,IAAI,GAAG,YAAM;AAChB,UAAM,OAAO,GAAG;AACd,aAAK,EAAE,KAAK;AACZ,YAAI,EAAE,KAAK;AACX,aAAK,EAAE,KAAK;;OAEb,CAAC;AACF,aAAO,oCAAS,OAAO,CAAC,CAAC;KAC1B,CAAC;GACH;;AAED,MAAI,OAAO,GAAG,oBAAoB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY,EAAK;AACvE,QAAI,YAAY,CAAC,MAAM,EAAE;;AAEvB,kBAAY,CAAC,KAAK,GAAG,CAAC,CAAC;KACxB;AACD,WAAO,wBAAE,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;GACxC,CAAC,CAAC;;AAEH,MAAI,CAAC,aAAa,EAAE;AAClB,WAAO,OAAO,CAAC,IAAI,CAAC,UAAC,EAAE;aAAK,EAAE;KAAA,EAAE,UAAC,KAAK;aAAK,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;KAAA,CAAC,CAAC;GAClE;AACD,SAAO,OAAO,CAAC;CAChB;;AAGM,SAAS,gBAAgB,CAAC,aAAa,EAAE,OAAO,EAAE;AACvD,SAAO,wBAAE,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,EAAC,EAAE,EAAE,aAAa,CAAC,EAAE,GAAG,GAAG,GAAG,OAAO,EAAC,CAAC,CAAC;CAC5E;;;;;;;AAOM,SAAS,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;AACtD,MAAI,wBAAE,UAAU,CAAC,KAAK,CAAC,EAAE;AACvB,SAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC;GAC1D;AACD,SAAO,kBAAQ,OAAO,CAAC,KAAK,CAAC,CAAC;CAC/B;;;;;;;;;;AAUM,SAAS,oBAAoB,CAAC,MAAM,EAAE,OAAO,EAAE;AACpD,MAAM,IAAI,GAAG,wBAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,MAAI,wBAAE,WAAW,CAAC,OAAO,CAAC,EAAE;AAC1B,UAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;GAC7D;AACD,SAAO,kBAAQ,GAAG,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,CAAC,EAAK;AACnC,WAAO,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;GAChD,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM,EAAK;AAClB,QAAI,MAAM,GAAG,EAAE,CAAC;AAChB,QAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,CAAC,EAAK;AACvB,YAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KACzB,CAAC,CAAC;AACH,WAAO,MAAM,CAAC;GACf,CAAC,CAAC;CACJ;;;;;;;;;AASM,SAAS,iBAAiB,CAAC,MAAM,EAAE,aAAa,EAAE;AACvD,SAAO,kBAAQ,GAAG,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,CAAC,EAAK;AACvC,WAAO,cAAc,CAAC,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;GAChD,CAAC,CAAC;CACJ","file":"dryadic.js","sourcesContent":["\nimport _ from 'underscore';\nimport {bootServer, bootLang} from './internals/side-effects';\nimport {Promise} from 'bluebird';\n\n\nPromise.onPossiblyUnhandledRejection((error, promise) => {\n  console.error(error);\n  throw Error(error);\n});\n\n\nexport function dryadic(fn, requireSCSynth=false, requireSClang=false) {\n  return (parentContext) => {\n    return withContext(parentContext, requireSCSynth, requireSClang).then(fn);\n  };\n}\n\n/**\n * Create a context, inheriting from parentContext.\n *\n * @param {Object|undefined} parentContext\n * @param {Boolean} requireSCSynth - will boot server if required\n * @param {Boolean} requireSClang - will boot language interpreter if required\n */\nexport function withContext(parentContext, requireSCSynth=false, requireSClang=false) {\n  var context = _.assign({id: '0'}, parentContext);\n\n  var deps = {};\n  if (requireSCSynth && !context.server) {\n    deps.server = bootServer;\n  }\n  if (requireSClang && !context.lang) {\n    deps.lang = () => {\n      const options = {\n        stdin: false,\n        echo: false,\n        debug: false\n        // langPort\n      };\n      return bootLang(options);\n    };\n  }\n\n  var promise = callAndResolveValues(deps, context).then((resolvedDeps) => {\n    if (resolvedDeps.server) {\n      // set root node\n      resolvedDeps.group = 0;\n    }\n    return _.extend(context, resolvedDeps);\n  });\n  // Top level call, raise all exceptions\n  if (!parentContext) {\n    return promise.then((ok) => ok, (error) => console.error(error));\n  }\n  return promise;\n}\n\n\nexport function makeChildContext(parentContext, keyName) {\n  return _.assign({}, parentContext, {id: parentContext.id + '.' + keyName});\n}\n\n\n/**\n * If value is a function then call it,\n * if function returns a Promise then resolve it.\n */\nexport function callAndResolve(value, context, keyName) {\n  if (_.isFunction(value)) {\n    value = value(makeChildContext(context, keyName || '_'));\n  }\n  return Promise.resolve(value);\n}\n\n\n/**\n * Call and resolve each of the values of an Object.\n *\n * @param {Object} object - whose values will be called and resolved\n * @param {Object} context - which is passed into any Functions\n * @returns {Promise} - resolves to an Object with values mapped to the resolved results\n */\nexport function callAndResolveValues(object, context) {\n  const keys = _.keys(object);\n  if (_.isUndefined(context)) {\n    throw new Error('Missing context for callAndResolveValues');\n  }\n  return Promise.map(keys, (key, i) => {\n    return callAndResolve(object[key], context, i);\n  }).then((values) => {\n    var result = {};\n    keys.forEach((key, i) => {\n      result[key] = values[i];\n    });\n    return result;\n  });\n}\n\n\n/**\n * Call and resolve each of the items in a list\n * @param {Array} things\n * @param {Object} parentContext\n * @returns {Promise} - resolves to an Array with the resolved things\n */\nexport function callAndResolveAll(things, parentContext) {\n  return Promise.map(things, (thing, i) => {\n    return callAndResolve(thing, parentContext, i);\n  });\n}\n"]}
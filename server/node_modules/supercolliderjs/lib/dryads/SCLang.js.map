{"version":3,"sources":["../../src/dryads/SCLang.js"],"names":["defaultOptions","debug","echo","stdin","SCLang","options","callOrder","updateContext","context","properties","sclang","defaults","log","run","quit"],"mappings":";;;;;;;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,iBAAiB;AACrBC,SAAO,IADc;AAErBC,QAAM,KAFe;AAGrBC,SAAO;AAHc,CAAvB;;AAMA;;;;;;;;;;;;IAWqBC,M;;;;;;;;;;;wCACC;AAClB,aAAO;AACLC,iBAASL;AADJ,OAAP;AAGD;;;oCAEuB;AACtB,aAAO;AACLM,mBAAW,oBADN;AAELC,uBAAe,uBAACC,OAAD,EAAUC,UAAV;AAAA,iBAA0B;AACvCC,oBAAQ,kBAAK,iBAAEC,QAAF,CAAWF,WAAWJ,OAAtB,EAA+B,EAAEO,KAAKJ,QAAQI,GAAf,EAA/B,CAAL;AAD+B,WAA1B;AAAA;AAFV,OAAP;AAMD;;;6BAEgB;AACf,aAAO;AACLC,aAAK,aAACL,OAAD,EAAqB;AACxB,iBAAOA,QAAQE,MAAR,CAAeI,IAAf,EAAP;AACD;AAHI,OAAP;AAKD;;;;;;kBAtBkBV,M","file":"SCLang.js","sourcesContent":["/* @flow */\nimport { Dryad } from 'dryadic';\nimport { boot } from '../lang/sclang';\nimport _ from 'lodash';\n\nconst defaultOptions = {\n  debug: true,\n  echo: false,\n  stdin: false\n};\n\n/**\n * Boots a new SuperCollider language interpreter (sclang) making it available for all children as context.sclang\n *\n * Always boots a new one, ignoring any possibly already existing one in the parent context.\n *\n * `options` are the command line options supplied to sclang (note: not all options are passed through yet)\n * see {@link lang/SCLang}\n *\n * Not to be confused with the other class named SCLang which does all the hard work.\n * This Dryad class is just a simple wrapper around that.\n */\nexport default class SCLang extends Dryad {\n  defaultProperties() {\n    return {\n      options: defaultOptions\n    };\n  }\n\n  prepareForAdd(): Object {\n    return {\n      callOrder: 'SELF_THEN_CHILDREN',\n      updateContext: (context, properties) => ({\n        sclang: boot(_.defaults(properties.options, { log: context.log }))\n      })\n    };\n  }\n\n  remove(): Object {\n    return {\n      run: (context: Object) => {\n        return context.sclang.quit();\n      }\n    };\n  }\n}\n"]}